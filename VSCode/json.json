{
	// Place your snippets for json here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	/* JSON VSCode Snippets FT-Datafangst v0.1*/
	/* Usage: start typing the prefix defined below and select the snippet from the intellisense dropdown with the enter key or tab key.*/
	/* Some snippets contain cursor placements or choices, use tab to jump to next */
	
	/* 1. General */
	"IdValue":{
		"prefix":"iv",
		"body":[
		   "{",
		   "  \"id\": \"${1:}\",",
		   "  \"value\": \"${2:}\"",
		   "}"
		],
		"description":"Inserts an empty id-value pair"
	 },
	"Layout Template":{
		"prefix":"layout",
		"body":[
			"{",
			"  \"$schema\": \"https://altinncdn.no/schemas/json/layout/layout.schema.v1.json\",",
			"  \"data\": {",
			"    \"layout\": [",
			"      {",
			"        \"id\": \"navbar\",",
			"        \"type\": \"NavigationBar\"",
			"      },",
			"      {",
			"        \"id\": \"nav\",",
			"        \"type\": \"NavigationButtons\",",
			"        \"textResourceBindings\": {",
			"          \"next\": \"nav-next\",",
			"          \"back\": \"nav-back\"",
			"        },",
			"        \"showBackButton\": true,",
			"        \"triggers\": [",
			"          \"validatePage\"",
			"        ]",
			"      }",
			"    ]",
			"  }",
			"}"
		],
		"description":"A reusable layout snippet"
	},
	"Prefill": {
		"prefix": "prefill",
		  "body": [
		"{",
		"\t\"$schema\": \"https://altinncdn.no/schemas/json/prefill/prefill.schema.v1.json\",",
		"\t\"UserProfile\": {",
		"\t\t\"Email\": \"${1}\",",
		"\t\t\"Party.Name\": \"${2}\",",
		"\t\t\"PhoneNumber\": \"${3}\",",
		"\t\t\"ProfileSettingPreference.Language\": \"${4}\"",
		"\t},",
		"\t\"ER\": {",
		"\t\t\"OrgNumber\": \"${5}\",",
		"\t\t\"Name\": \"${6}\",",
		"\t\t\"MailingAddress\": \"${7}\",",
		"\t\t\"MailingPostalCode\": \"${8}\",",
		"\t\t\"MailingPostalCity\": \"${9}\"",
		"\t}",
		"}"
		  ],
		  "description": "Snippet for model.prefill.json"
	},
	 /* 2. Components*/
	"Header Component":{
		"prefix":"header",
		"body":[
		   "{",
		   "  \"id\": \"${1:}-Header\",",
		   "  \"type\": \"Header\",",
		   "  \"size\": \"${2|L,M,S|}\",",
		   "  \"textResourceBindings\": {",
		   "    \"title\": \"${1:}-Header.title\"",
		   "  }",
		   "}${3:,}"
		],
		"description":"Inserts a header component"
	},
	"Paragraph Component":{
		"prefix":"paragraph",
		"body":[
			"{",
			"  \"id\": \"${1:}-Paragraph\",",
			"  \"type\": \"Paragraph\",",
			"  \"textResourceBindings\": {",
			"    \"title\": \"${1:}-Paragraph.title\"",
			"  }",
			"}${2:,}"
		],
		"description":"Inserts a paragraph component"
	},

	"Input Component":{
		"prefix":"input",
		"body":[
			"{",
			"  \"id\": \"${1:}-Input\",",
			"  \"type\": \"Input\",",
			"  \"required\": ${2|false,true|},",
			"  \"readOnly\": ${3|false,true|},",
			"  \"textResourceBindings\": {",
			"    \"title\": \"${1:}-Input.title\"",
			"  },",
			"  \"dataModelBindings\": {",
			"    \"simpleBinding\": \"${4:}\"",
			"  }",
			"}${5:,}"
		],
		"description":"Inserts an input component"
	},
	"RadioButtons Component":{
		"prefix":"radiobuttons",
		"body":[
			"{",
			"  \"id\": \"${1:}-RadioButtons\",",
			"  \"type\": \"RadioButtons\",",
			"  \"required\": ${2|false,true|},",
			"  \"readOnly\": ${3|false,true|},",
			"  \"textResourceBindings\": {",
			"    \"title\": \"${1:}-RadioButtons.title\"",
			"  },",
			"  \"dataModelBindings\": {",
			"    \"simpleBinding\": \"${4:}\"",
			"  },",
			"  \"optionsId\": \"${5:trueFalse_kodeliste}\" ",
			"}${6:,}"
		],
		"description":"Inserts a radiobuttons component"
	},
	"Dropdown Component": {
		"prefix": "dropdown",
		"body": [
			"{",
			"  \"id\": \"${1:}-Dropdown\",",
			"  \"type\": \"Dropdown\",",
			"  \"required\": ${2|false,true|},",
			"  \"readOnly\": ${3|false,true|},",
			"  \"textResourceBindings\": {",
			"      \"title\": \"${1}-Dropdown.title\"",
			"  },",
			"  \"dataModelBindings\": {",
			"      \"simpleBinding\": \"${4:}\"",
			"  },",
			"  \"optionsId\": \"${5:}\"",
			"}${6:,}"
		],
		"description": "Inserts a Dropdown component"
	},
	"Datepicker Component": {
		"prefix": "datepicker",
		"body": [
			"{",
			"  \"id\": \"${1:}-Datepicker\",",
			"  \"type\": \"Datepicker\",",
			"  \"required\": ${2|false,true|},",
			"  \"readOnly\": ${3|false,true|},",
			"  \"textResourceBindings\": {",
			"    \"title\": \"${1}-Datepicker.title\"",
			"  },",
			"  \"dataModelBindings\": {",
			"    \"simpleBinding\": \"${4:}\"",
			"  }",
			"}${5:,}"
		],
		"description": "Adds a Datepicker to a component"
	},
	"TextArea Component":{
		"prefix":"textArea",
		"body":[
			"{",
			"  \"id\": \"${1:}-TextArea\",",
			"  \"type\": \"TextArea\",",
			"  \"required\": ${2|false,true|},",
			"  \"readOnly\": ${3|false,true|},",
			"  \"textResourceBindings\": {",
			"    \"title\": \"${1:}-TextArea.title\"",
			"  },",
			"  \"dataModelBindings\": {",
			"    \"simpleBinding\": \"${4:}\"",
			"  }",
			"}${5:,}"
		],
		"description":"Inserts a TextArea component"
	},
	"Grid Component": {
		"prefix": "grid",
		"body": [
			"{",
			"  \"id\": \"${1:}-Grid\",",
			"  \"type\": \"Grid\",",
			"  \"rows\": [",
			"    {",
			"      \"header\": ${2|false,true|},",
			"      \"cells\": [",
			"        { \"text\": \"${1:}-Grid.column-1.title\"${3:, \"width\": \"${4:}%\"} },",
			"        { \"text\": \"${1:}-Grid.column-2.title\" }",
			"      ]",
			"    },",
			"    {",
			"      \"cells\": [",
			"        { \"text\": \"${1:}-${5:}.title\" },",
			"        { \"component\": \"${1:}-${5:}\" }",
			"      ]",
			"    }",
			"  ]",
			"}${6:,}"
		],
		"description": "A grid component with two columbes and a header row and a data row."
	},
	"Grid Cell Component": {
		"prefix": [ "grid.Cell", "g.Cell", "gc" ],
		"body": [
			"{",
			"  \"cells\": [",
			"    { \"text\": \"${1:}\" }",
			"  ]",
			"}${2:,}"
		],
		"description": "A grid Cell component with one text component. Typicly used when setting up columb headers"
	},
	"Grid Cell Component with Text and Component": {
		"prefix": [ "grid.Cell.TextAndComponent", "gc.TextAndComponent", "gctc" ],
		"body": [
			"{",
			"  \"cells\": [",
			"    { \"text\": \"${1:}.title\" },",
			"    { \"component\": \"${1:}\" }",
			"  ]",
			"}${2:,}"
		],
		"description": "A grid Cell component with one text component."
	},
	"Grid text Component": {
		"prefix": [ "grid.Cell.Text", "gc.Text", "gct"],
		"body": [
			"{ \"text\": \"${1:}.title\"${2:, \"width\": \"${3:}%\"} }${4}"
		],
		"description": "A grid text component for a cell. Width is included, but as a default tab stop"
	},
	"Grid Cell Component Component": {
		"prefix": [ "grid.Cell.Component", "gc.Component", "gcc" ],
		"body": [
			"{ \"component\": \"${1:}\" }${2}"
		],
		"description": "A grid component for a cell."
	},
	"Group Component": {
		"prefix": "group",
		"body":[
			"{",
			"  \"id\": \"${1:}-Group\",",
			"  \"type\": \"Group\",${2:\n  \"textResourceBindings\": {\n    \"title\": \"${1:}-TextArea.title\"\n  \\}},",
			"  ${3:\"dataModelBindings\": {\n    \"group\": \"${4:}\"\n  \\},\n}  \"children\": [", 
			"    \"${5:field1}\",",
			"    \"${6:field2}\"",
			"  ]",
			"}${7:,}"
		]
	},
	"FileUpload Component": {
		"prefix": "fileUpload",
		"body": [
			"{",
			"  \"id\": \"${1:}-FileUpload\",",
			"  \"type\": \"FileUpload\",",
			"  \"maxFileSizeInMB\": 200,",
			"  \"maxNumberOfAttachments\":1,",
			"  \"minNumberOfAttachments\":1,",
			"  \"displayMode\": \"${2|list,simple|}\",",
			"  \"required\": ${3|false,true|},",
			"  \"hasCustomFileEndings\": ${4|false,true|},",
			"  \"validFileEndings\": \".zip, .pdf\",",
			"  \"textResourceBindings\": {",
			"    \"title\": \"$1-FileUpload.title\",",
			"    \"description\": \"$1-FileUpload.description\"",
			"  }",
			"}${5:,}"
		],
		"description": "Snippet for a FileUpload component"
	},
	"Checkboxes Component": {
		"prefix": "checkBoxes",
		"body": [
			"{",
			"	\"id\": \"${1:}-Checkboxes\",",
			"	\"type\": \"Checkboxes\",",
			"	\"required\": ${2|false,true|},",
			"	\"readOnly\": ${3|false,true|},",
			"	\"options\": [",
			"		{",
			"		\"label\": \"${4:}\",",
			"		\"value\": \"${5:}\"",
			"		}",
			"	],",
			"	\"dataModelBindings\": {",
			"		\"simpleBinding\": \"${6:}\"",
			"	}",
			"}${7:,}"
		]
	},
	"Navigation Components":{
		"prefix":"navigation",
		"body":[
			"{",
			"  \"id\": \"navbar\",",
			"  \"type\": \"NavigationBar\"${1:,\n  \"triggers\": [\n    \"validatePage\"\n  ]}",
			"},",
			"{",
			"  \"id\": \"nav\",",
			"  \"type\": \"NavigationButtons\",",
			"  \"textResourceBindings\": {",
			"    \"next\": \"${2:nav-next}\",",
			"    \"back\": \"${3:nav-back}\"",
			"  },",
			"  \"showBackButton\": true${4:,\n  \"triggers\": [\n    \"validatePage\"\n  ]}",
			"}"
		],
		"description":"Inserts a NavigationBar and a NavigationButtons component"
	},

	/* 3. Component Properties */
	"Hidden Property": {
		"prefix": ["prop.hidden", "p.hidden", "hidden", "ph" ],
		"body": [
			"\"hidden\": ${1|false,true|}${2:,}"
		],
		"description": "Adds a 'hidden' property to a component"
	},
	"Required Property": {
		"prefix": ["prop.required", "p.required", "required", "pre" ],
		"body": [
			"\"required\": ${1|false,true|}${2:,}"
		],
		"description": "Adds a 'required' property to a component"
	},
	"ReadOnly Property": {
		"prefix": ["prop.readOnly", "p.readOnly", "readOnly", "pro"],
		"body": [
			"\"readOnly\": ${1|false,true|}${2:,}"
		],
		"description": "Adds a 'readOnly' property to a component"
	},
	"Grid Property": {
		"prefix": ["prop.grid", "p.grid", "grid", "pg" ],
		"body": [
			"\"grid\": {",
			"	\t\"labelGrid\": {",
			"		\"${1|xs,sm,md,lg,xl|}\": ${2:}",
			"		},",
			"	\"innerGrid\": {",
			"	\t\"${1}\": ${3:}",
			"	}",
			"}${4}"
		],
		"description": "Adds a 'grid' property to a component"
	},
	"Text Resource Bindings Property": {
		"prefix": ["prop.textResourceBindings", "p.textResourceBindings", "textResourceBindings", "pt"],
		"body": [
			"\"textResourceBindings\": {",
			"  \"title\": \"${1:}}\"",
			"}${2:,}"
		],
		"description": "Adds a 'textResourceBindings' property to a component"
	},
	"Data Model Bindings Property": {
		"prefix": ["prop.dataModelBindings", "p.dataModelBindings", "dataModelBindings", "pd"],
		"body": [
			"\"dataModelBindings\": {",
			"  \"simpleBinding\": \"${1:}}\"",
			"}${2:,}"
		],
		"description": "Adds a 'dataModelBindings' property to a component"
	},
	"Formating Property": {
		"prefix": ["prop.formatting", "p.formatting", "formatting", "pf"],
		"body": [
			"\n\"formatting\": {",
			"  ${1:}",
			"}${2:,}"
		],
		"description": "Adds a 'formatting' property to a component"
	},

	// 4. Properties Element
	"Simple Expression for Property": {
		"prefix": ["expression.simple", "e.simple", "simple", "xs"],
		"body": [
			" [",
			"    \"${1|equals,notEquals,not,greaterThan,greaterThanEq,contains,notContains,commaContains,startsWith,endsWith|}\",",
			"    [",
			"        \"${2|component,dataModel,frontendSettings,instanceContext|}\",",
			"        \"${3:}\"",
			"    ],",
			"    \"${4:}\"",
			"]"
		],
		"description": "Adds simple logic to a property"
	},
	"And/Or Expression for Property": {
		"prefix": ["expression.andOr", "e.andOr", "andOr", "eao"],
		"body": [
			"[",
			"    \"${1|and,or|}\",",
			"    [",
			"        \"${2|equals,notEquals,not,greaterThan,greaterThanEq,contains,notContains,commaContains,startsWith,endsWith|}\",",
			"        [",
			"            \"${3|component,dataModel,frontendSettings,instanceContext|}\",",
			"            \"${4:}\"",
			"        ],",
			"        \"${5:}\"",
			"    ],",
			"    [",
			"        \"${6|equals,notEquals,not,greaterThan,greaterThanEq,contains,notContains,commaContains,startsWith,endsWith|}\",",
			"        [",
			"            \"${7|component,dataModel,frontendSettings,instanceContext|}\",",
			"            \"${8:}\"",
			"        ],",
			"        \"${9:}\"",
			"    ]",
			"]"
		],
		"description": "Adds a logic with and/or syntax to a property"
	},
	"If/Else Expression for Property": {
		"prefix": ["expression.ifElse", "e.ifElse", "ifElse", "eie"],
		"body": [
			"[",
			"  \"if\",",
			"  [\"${2|equals,notEquals,not,greaterThan,greaterThanEq,lessThan,lessThanEq,contains,notContains,commaContains,startsWith,endsWith|}\",",
			"  [\"${3|component,dataModel,frontendSettings,instanceContext|}\", \"${4:}\"], ${5:}],",
			"  \"${6:}\",",
			"  \"else\",",
			"  [",
			"  [\"${7|equals,notEquals,not,greaterThan,greaterThanEq,lessThan,lessThanEq,contains,notContains,commaContains,startsWith,endsWith|}\",",
			"  [\"${8|component,dataModel,frontendSettings,instanceContext|}\", \"${9:}\"], ${10:}],",
			"  \"${11:}\",",
			"  ]",
			"]"
		],
		"description": "Adds a if/else expression to a component property"
	},
	"Text Overflow Element" : {
		"prefix": ["grid.Cell.Text.TextOverflow", "gc.Text.TextOverflow", "gct.TextOverflow", "TextOverflow", "gctt"],
		"body": [
			"\"textOverflow\": {\"lineWrap\": ${1|false,true|}, \"maxHeight\": ${2:} }${3}" 
		],
		"description": "Adds Text Overflow (textOverflow) element to a property"
	},
	"Text Alignment" : {
		"prefix": ["grid.Cell.Text.Alignment", "gc.Text.Alignment", "gct.Alignment", "gAlignment", "gcta"],
		"body": [
			"\"alignText\": \"${1|left,center,right|}\"${2:,}" 
		],
		"description": "Adds text alignment (alignText) element to a property"
	},
	"Width Element" : {
		"prefix": ["grid.Cell.Text.Width", "gc.Text.Width", "gct.Width", "Width", "gctw"],
		"body": [
			"\"width\": \"${1:}%\"${2:,}" 
		],
		"description": "Adds width  element to a property"
	},
	"Input Formating Alignment" : {
		"prefix": ["input.Formating.Alignment", "if.Alignment", "iAlignment", "ifa"],
		"body": [
			"\"align\": \"${1|right,center,left|}\"${2:,}" 
		],
		"description": "Adds text alignment (align) to the formating property"
	},
	"Input Formating Number" : {
		"prefix": ["input.Formating.Number", "if.Number", "Number", "ifn"],
		"body": [
			"\"number\": {",
			"  ${1:${2:\"suffix\": \"${3: NOK}\"${4:,\n}}${5:  \"thousandSeparator\": \"${6: }\"}}",
			"}${7}" 
		],
		"description": ""
	},
	"Input Formating Number Suffix" : {
		"prefix": ["input.Formating.Number.suffix", "ifn.suffix", "suffix", "ifns"],
		"body": [
			"\"suffix\": \"${1: NOK}\"${2:,}" 
		],
		"description": ""
	},
	"Input Formating Number ThousandSeparator" : {
		"prefix": ["input.Formating.Number.ThousandSeparator", "ifn.ThousandSeparator", "ThousandSeparator", "ifnt"],
		"body": [
			"\"thousandSeparator\": \"${1: }\"${2:,}" 
		],
		"description": ""
	},
	"Input Formating Number AllowNegative" : {
		"prefix": ["input.Formating.Number.AllowNegative", "ifn.AllowNegative", "AllowNegative", "ifna"],
		"body": [
			"\"allowNegative\": ${1|false,true|}${2:,}" 
		],
		"description": ""
	}
}